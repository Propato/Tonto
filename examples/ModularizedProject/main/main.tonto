import GithubTonto
import core
import LivingThings.Human

module main

kind MainFunction

category MainCategory

subkind MainSubkind specializes MyKind

subkind SecondSubkind specializes Person

kind TestingInternalRelationSnippets {
  [*] <>-- namedAggregation -- [1..*] MyKind
  [*] -- namedAssociation -- [*] Person
  @comparative (end1) [*] <>-- namedAggregation1 -- [*] (end2) UrlKind
  @externalDependence
  (end1) [*] -- namedAssociation1 -- [*] (end2) SecondSubkind
  @bringsAbout
  ({ ordered } end1) [1..56] <>-- namedAggregation2 -- [60..120] ({ordered} end2) TestingInternalRelationSnippets
  @subQuantityOf
  ({ derived } end1) [1] -- namedAssociation2 -- [0..*] ({derived} end2) Person
}

datatype name {
  age: number
  gender: name [*] { derived }
}

enum NamedEnum {
  CASE,
  CASE,
  CASE
}
enum TestEnum {
  CASE1,
  CASE2
}
enum Name {
  case2
}

datatype noname of abstracts {
  name: string
}